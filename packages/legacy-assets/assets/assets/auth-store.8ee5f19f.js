import{api as s}from"./axios.c4f749e1.js";import{d as c}from"./index.7b40bbd4.js";import{u as n}from"./main-store.718cb995.js";const o="r2_explorer_session_token",d=c("auth",{state:()=>({user:"",loginMethod:""}),getters:{isAuthenticated:e=>!!e.user,StateUser:e=>e.user},actions:{async LogIn(e,t){var i;const r=n(),a=btoa(`${t.username}:${t.password}`);s.defaults.headers.common.Authorization=`Basic ${a}`;try{await r.loadServerConfigs(e)}catch(l){throw console.log(l),delete s.defaults.headers.common.Authorization,new Error("Invalid username or password")}s.defaults.headers.common.Authorization=`Basic ${a}`,this.loginMethod="basic",this.user=t.email,t.remind===!0?localStorage.setItem(o,a):sessionStorage.setItem(o,a),e.replace(((i=e.currentRoute.value.query)==null?void 0:i.next)||"/")},async CheckLoginInStorage(e){let t=sessionStorage.getItem(o);if(t||(t=localStorage.getItem(o)),!t)return!1;const r=n();s.defaults.headers.common.Authorization=`Basic ${t}`;try{await r.loadServerConfigs(e)}catch{delete s.defaults.headers.common.Authorization,await e.replace({name:"login",query:{next:e.currentRoute.fullPath}});return}this.user=atob(t).split(":")[0],this.loginMethod="basic"},async LogOut(e){localStorage.removeItem(o),sessionStorage.removeItem(o),this.user="",this.loginMethod="",await e.replace({name:"login"})}}});export{d as u};
